version: "3.8"

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    volumes:
      - ./data/kafka:/var/run/docker.sock
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/db
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: root
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres 
      - POSTGRES_DB=postgres
  server-consumer:
    container_name: server-consumer
    build: ./server-consumer
    ports:
      - 5001:5001
    volumes:
      - ./server-consumer:/app
    environment:
      - PORT=5001
      - MONGO_URL=mongodb://mongo:27017/consumer
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=topic1
    depends_on:
      - mongo
      - kafka
  server-producer:
    container_name: server-producer
    build: ./server-producer
    ports:
      - 5002:5002
    volumes:
      - ./server-producer:/app
    environment:
      - PORT=5002
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=topic1
    depends_on:
      - postgres
      - kafka